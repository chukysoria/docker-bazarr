name: Build Image

on:
  release:
    types: [published]
  push:

env:
  USER: chukysoria
  IMAGE: bazarr
  DESCRIPTION: "[Bazarr](https://www.bazarr.media/) is a companion application to Sonarr and Radarr. It can manage and download subtitles based on your requirements. You define your preferences by TV show or movie and Bazarr takes care of everything for you. "
  BUILD_VERSION_ARG: BAZARR_VERSION
  EXT_USER: morpheus65535
  EXT_REPO: bazarr

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set current date as env variable
        run: echo "NOW=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/arm/v7

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Find latest release of app
        run: |
          echo "EXT_RELEASE=$(curl -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' -s https://api.github.com/repos/${{ env.EXT_USER }}/${{ env.EXT_REPO }}/releases/latest | jq -r '. | .tag_name')" >> "$GITHUB_ENV"

      - name: Sanite Release version
        run: |
          echo "EXT_RELEASE_CLEAN=$(echo '${{ env.EXT_RELEASE }}' | sed 's/[~,%@+;:/]//g')" >> "$GITHUB_ENV"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
             ghcr.io/${{ env.USER }}/${{ env.IMAGE }}            
          # generate Docker tags based on the following events/attributes
          tags: |
            type=sha,format=long
            type=raw,value=${{ github.ref_name }}
            type=ref,event=branch,prefix=${{ env.EXT_RELEASE_CLEAN }}-
            type=ref,event=tag,prefix=${{ env.EXT_RELEASE_CLEAN }}-
          labels: |
            org.opencontainers.image.created=${{ env.NOW }}
            org.opencontainers.image.authors=Carlos Sanchez
            org.opencontainers.image.url=https://github.com/${{ env.USER }}/docker-${{ env.IMAGE }}/packages
            org.opencontainers.image.documentation=https://docs.linuxserver.io/images/docker-${{ env.IMAGE }}  
            org.opencontainers.image.source=https://github.com/chukysoria/docker-${{ env.IMAGE }}  
            org.opencontainers.image.version=${{ env.EXT_RELEASE_CLEAN }}-ls${{ github.ref_name }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.vendor=Carlos Sanchez
            org.opencontainers.image.licenses=GPL-3.0-only
            org.opencontainers.image.ref.name=${{ github.sha }}
            org.opencontainers.image.title=${{ env.IMAGE }}  
            org.opencontainers.image.description=baseimage-alpine image by Carlos Sanchez        

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: ${{ github.event_name == 'release' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          pull: true
          build-args: |
            ${{ env.BUILD_VERSION_ARG }}=${{ env.EXT_RELEASE }}
            VERSION=${{ github.ref_name }}
            BUILD_DATE=${{ env.NOW }}
